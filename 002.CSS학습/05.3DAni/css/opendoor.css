@charset "utf-8";
/* Open Door CSS - opendoor.css */

/* 웹폰트 */
@import url("https://fonts.googleapis.com/css2?family=Comfortaa:wght@700&display=swap");
/* font-family: 'Comfortaa', cursive; */

/* 초기화 */
html,
body,
h1 {
    margin: 0;
    padding: 0;
}

body {
    background-color: #9c0;
    animation: bgAni 10s linear infinite;
}

/* 전체타이틀 */
.tit {
    font-family: "Comfortaa", cursive;
    font-size: min(5vw, 42px);
    /* 최대글자크기지정 42픽셀이상 안크게할거야! */
    margin: 5vh 0;
    text-align: center;
    color: #fff;
    text-shadow: 2px 2px 2px #222;
}
/* 등장 키프레임 */
@keyframes upAni {
    to{
        transform: translateY(0);

    }
}
   
@keyframes bgAni {
    0%{
        background-color: #9c0(255, 201, 201);
    }
    20%{
        background-color: rgb(232, 248, 89);
    }
    40%{
        background-color: rgb(96, 170, 255);
    }
    60%{
        background-color: rgb(92, 255, 179);
    }
    80%{
        background-color: rgb(255, 212, 71);
    }
    100%{
        background-color: #9c0(255, 0, 0);
    }
}
/* 전체랩핑박스 */
.wrap{
    overflow: hidden;
    padding: 50px 0;
    /* 상단을 overflow hidden을 줘서 문이짤려서 패딩을 넣어줌 */
}

/* 전체문부모 */
.cont {
    width: 200px;
    height: 300px;
    margin: 0 auto;
    background-color: #900;
    /* 트랜스폼이동 */
    transform: translateY(120%);
    /* 트랜스폼 y축이동 : 패딩을 고려하여 
    내크기보다 좀더 많이 아랫쪽으로 이동 */
    animation: upAni 4s ease-out 1s forwards;
    /* animation: ee 0.1s linear infinite alternate,
    ee 4s linear; */
}

/* 문프레임 */
.frame {
    position: relative;
    top: 20px;
    width: 150px;
    height: 280px;
    margin: 0 auto;
    background: url(../images/seashore.jpg) no-repeat center/auto 100%;

    /***************************************** 
        [ 3D 원근설정 ]
        1. 셋팅위치 : 3D원근설정을 할 대상의 부모요소 
        2. 설정방법 : 
        perspective: 수치;
        -> 수치는 px단위로 숫자가 클수록 
        소실점이 먼것이므로 각도가 작아진다
        (이 거리는 기준점에서 소실점까지의 거리이다.)
    *****************************************/
    perspective: 480px;

     /*********************************************** 
     [ 뷰포인트(관찰자위치) 변경옵션 ]
     perpective-origin : 가로 세로;
     - 가로축: left, center, right, px, % 등 단위
     - 세로축: top, center, bottom, px, % 등 단위
     -> 두 값 중에 하나만 쓸 수 있고 복합일 경우
     2가지를 같이 셋팅함!
    ***********************************************/

    animation: sea 2s ease-in-out infinite alternate;
}

/* 문짝 */
.door {
    position: relative;
    /* 부모자격.handle */
    z-index: 1;
    /* 엘사보다 위 */
    width: 150px;
    height: 280px;
    background-color: #c90;

    /* 문짝회전 */
    transform: rotateY(0deg);
    /* 문짝회전 축변경 */
    transform-origin: left;
    /* 트랜스폼 회전축 변경속성
    transform-origin: 가로축 세로축
    - 가로축: left, center, right, px, % 등 단위
    - 세로축: top, center, bottom, px, % 등 단위 */

    /* 애니메이션: 이시이지반방마 */
    /* 처음에 1초간 열린후 끝상태유지 */
    animation: openFirst 1s ease-in-out forwards,
    /* 계속여닫기 애니 1초후 작동 */
    openDoor 2s ease-in-out 1s infinite alternate;
    /* 애니메이션 상태관리 */
    animation-play-state: paused;
    /* 
        animation-play-state 상태속성
        1. running :작동
        2. paused : 멈춤
    */
}

/* 문짝부모에 오버시 문짝애니작동*/
.cont:hover .door{
    animation-play-state: running;
}

/* 문짝 처음열기 키플에ㅣㅁ */
@keyframes openFirst {
    to{
        transform: rotateY(60deg);
    } 
    from{
        transform: rotateY(0deg);
    }
}/* openFirst 키프레임*/


/* 문짝여닫기 키프레임 */
@keyframes openDoor {
    0%{
        transform: rotateY(60deg);
    }
    100%{
        transform: rotateY(-60deg);
    }
}/* openDoor 키프레임 */

/* 백그라운드 사이즈 키프레임 */
@keyframes sea {
    from{
        background-size: auto 120%;
    }
}


/* 손잡이 */
.handle {
    position: absolute;
    top: 130px;
    right: 10px;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: blue;
}


/* 엘사박스 */
#elsa{
    position: absolute;
    top: 30px;
    width: 150px;
    height: 250px;
    /* 엘사이미지숨기기 */
    overflow: hidden;
}
/* 엘사이미지 */
#elsa img{
    margin-left: 130px;
    transform-origin: bottom;
    animation: elsa 1s ease-in-out .1s infinite alternate;
    /* 처음에 멈춰있기 */
    animation-play-state: paused;
}
/* 마우스오버시 작동 */
.cont:hover #elsa img{
    animation-play-state: running;
}
/* 엘사키프레임 */

@keyframes elsa {
    to{
        transform: rotate(-10deg);
    }
    
}

.tit span{
    display: inline-block;
    transform: translateX(-80vw);
    animation: titspan .5s cubic-bezier(0.46, 0.76, 0.32, 1.28) forwards;
}
@keyframes titspan {
    to{
        transform: translateX(0vw);
    }
}